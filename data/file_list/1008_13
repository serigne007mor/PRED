Return-Path: <mounira.harzallah@univ-nantes.fr>
X-Original-To: polytech_liste-egc@sympa.univ-nantes.fr
Delivered-To: polytech_liste-egc@sympa.univ-nantes.fr
Received: from BounceSmtp2.univ-nantes.fr (BounceSMTP2.univ-nantes.prive [172.20.12.67])
	by Sympa.univ-nantes.fr (Postfix) with ESMTP id 9516C19D2F13
	for <polytech_liste-egc@sympa.univ-nantes.fr>; Mon, 10 Dec 2007 15:31:14 +0100 (CET)
Received: from MX2.univ-nantes.fr (MX2.univ-nantes.fr [193.52.101.136])
	by BounceSmtp2.univ-nantes.fr (Postfix) with ESMTP id 7FB14C1BE
	for <polytech_liste-egc@sympa.univ-nantes.fr>; Mon, 10 Dec 2007 15:18:26 +0100 (CET)
Received: from localhost (debian [127.0.0.1])
	by MX2.univ-nantes.fr (Postfix) with ESMTP id 9DB70828AF9
	for <polytech_liste-egc@sympa.univ-nantes.fr>; Mon, 10 Dec 2007 15:32:16 +0100 (CET)
Received: from MX2.univ-nantes.fr ([193.52.101.136])
	by localhost (MX2.univ-nantes.fr [193.52.101.136]) (amavisd-new, port 10024)
	with LMTP id 30505-04-67
	for <polytech_liste-egc@sympa.univ-nantes.fr>;
	Mon, 10 Dec 2007 15:32:16 +0100 (CET)
X-Greylist: whitelisted by SQLgrey-1.6.7
Received: from smtp-tls.univ-nantes.fr (Smtp-Tls1.univ-nantes.fr [193.52.101.145])
	by MX2.univ-nantes.fr (Postfix) with ESMTP id 3837A80019F
	for <liste-egc@polytech.univ-nantes.fr>; Mon, 10 Dec 2007 15:32:16 +0100 (CET)
Received: from localhost (debian [127.0.0.1])
	by smtp-tls.univ-nantes.fr (Postfix) with ESMTP id F25CA500719
	for <liste-egc@polytech.univ-nantes.fr>; Mon, 10 Dec 2007 15:31:13 +0100 (CET)
Received: from smtp-tls.univ-nantes.fr ([193.52.101.145])
	by localhost (SMTP-TLS.univ-nantes.fr [193.52.101.145]) (amavisd-new, port 10024)
	with LMTP id 14988-05 for <liste-egc@polytech.univ-nantes.fr>;
	Mon, 10 Dec 2007 15:31:13 +0100 (CET)
Received: from [127.0.0.1] (unknown [172.21.150.182])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by smtp-tls.univ-nantes.fr (Postfix) with ESMTP id C7CC750070F
	for <liste-egc@polytech.univ-nantes.fr>; Mon, 10 Dec 2007 15:31:13 +0100 (CET)
Message-ID: <475D4DB1.4010500@univ-nantes.fr>
Date: Mon, 10 Dec 2007 15:31:13 +0100
From: Mounira Harzallah <mounira.harzallah@univ-nantes.fr>
User-Agent: Thunderbird 1.5.0.13 (Windows/20070809)
MIME-Version: 1.0
To: liste-egc@polytech.univ-nantes.fr
Subject: Appel =?windows-1252?Q?=E0_candidature_pour_un_PostDoc20?=
 =?windows-1252?Q?08?=
References: <4753D76F.7000701@univ-nantes.fr> <475D3547.607@univ-nantes.fr> <475D371E.4020505@univ-nantes.fr>
In-Reply-To: <475D371E.4020505@univ-nantes.fr>
Content-Type: text/plain; charset=windows-1252; format=flowed
Content-Transfer-Encoding: 8bit
X-Virus-Scanned: by amavisd-new-20030616-p7 (Debian) at smtp.univ-nantes.fr
X-Virus-Scanned: by amavisd-new-20030616-p7 (Debian) at univ-nantes.fr
X-Validation-by: fabrice.guillet@univ-nantes.fr


  Postdoctoral Position at University of Nantes, LINA-COD and with the
  collaboration of the University of Torino, Computer Science department


    Postdoctoral vacancy for 6 months


    Expected to start on January-February 2008

*Postdoctoral Title: *From Identification of correspondences between 
languages to translation of models.*  *

Your research will focus on topics in the following areas: **

    * Semantic measures of comparison
    * Ontology building and alignment
    * UEML Approach
    * Declarative language for model mapping 

*Project Context*

The concept of a model has now become very important. In complex 
systems, good models allow to achieve insights of problems and 
solutions, autonomy and independence of the components of the system, 
better and efficient development and better maintenance of these 
components.

But to achieve objectives just claimed, several types of models should 
be built by using different languages. For instance, an enterprise must 
necessarily use models defined in different languages for strategic 
positioning and production management. In process management, models in 
distinct languages for respectively expressing business processes and 
languages for realising these processes are required. Additionally, some 
languages can be used to expressing distinct aspects of a complex 
system: therefore, it is also possible to use, while no fully safe, the 
same language for expressing those distinct aspects.

Therefore, the key point to achieve the objectives claimed above can be 
paraphrased by saying that it is required to establish relationships on 
models for guaranteeing effective usage of them and for guaranteeing 
they are not contradictory. Establishing those relationships is usually 
approached in the following two ways according to what is known among 
languages:

-          relationships between distinct languages  in which models are 
expressed are known, because universally accepted or formally provable;

-          relationships between languages are not known, neither 
universally accepted nor formally provable, therefore all models in 
distinct languages are reproduced in only one language, so that 
relationships within the same language are known, universally accepted 
or formally provable.

Both ways are limited while effective.

Indeed, the first way is relevant only for languages used for long time 
(e.g. entity-relationship model and relational data model) so that a 
good understanding of relationships between them is known and 
universally accepted. In other situations, relationships have been 
standardised (e.g. programming languages to CORBA – Common Object 
Request Broker Architecture -). In yet another situations, these 
relationships are formally provable but only because languages are fully 
formalised (and their formalisations are universally accepted) (e.g. 
process algebra variants and Petri nets). However, in these last 
situations, universal acceptance in not guaranteed by the formal proofs 
only.

In the second way, one difficulty is to provide a well-accepted unique 
language. An additional difficulty raises because models natively 
expressed in a language should be rewritten in the unique language and 
this procedure is not error-free, possibly biased, inefficient and, 
because models change, continuously needed. This unique language can be 
only defined for the purpose of establishing relationships or with the 
purpose to substitute the various languages. The most important essay 
with this last purpose is UML (Unified Modeling Language). In the domain 
of knowledge representation, CL (common logics) and KIF (knowledge 
interchange format) are notable examples of first purpose. Recently, a 
relatively new concept “ontology” is also used for abstracting not 
relevant details of models and putting all models in one language. 
Additionally, a relatively new “generic model management area” is also 
proposing how “to manage” models (i.e. performing difference, merging, 
composition and other operations on models) but only focusing within the 
relational data model. This is eventually possible because models as 
artefacts can be represented as data in a database.

Based on the limitations advocated above, we are proposing a third way 
which is named UEML – Unified Enterprise Modelling Language - (or UEML 
approach). The earlier works are summarised in the next section. The 
most important and remarkable features of UEML are:

    * UEML is based on precise ontological analysis of languages (name
      /language incorporation /in UEML), being available analysis made
      operational and usable through available tools; achievement on
      common agreement on language incorporation is then based on
      building a consensus in a distributed manner;
    * UEML is not limited in languages, then additional languages can be
      added (or incorporated) as needed;
    * In UEML, the available ontological analysis can be used to
      discover in a semi-automated way, relationships between languages
      (called /correspondences/ in UEML terminology).

*Earlier works*

The UEML approach has been developed in the network of excellence 
INTEROP and more specifically in the work package DEM (Domain Enterprise 
Modeling). The UEML approach – supporting by several computerise tools - 
is an ontological approach for describing modelling languages and 
finding out semantic correspondences between constructs of those 
languages.  There is already a set of modelling languages that have been 
fully or partially incorporated in the UEMLBase tool using the UEML 
ontology. The UEML ontology is evolving and eventually enriched by using 
the ontological analysis of language constructs. The starting point from 
which the UEML ontology is growing is the well-know BWW’s model and 
Bunge ontology. This allows a greater flexibility and adaptation of the 
ontology to languages meaning. Therefore, the UEML ontology will be 
finalized and stabilized when a sufficient number of languages is 
incorporated.
However, once several constructs are incorporated, it is possible to 
establish semantic correspondences (equivalence or order) between them. 
These correspondences can be identified or discovered by using semantic 
measures for comparing concepts already developed in the ontology area.

Currently, the ontology UEML is not yet stable: its structure and 
content is evolving. Similarly, the incorporation of language constructs 
is not validated. Therefore, the usage of correspondences focuses on 
ontology enrichment and construct incorporation validation. A list of 
semantic measures has been already implemented and applied on the 
constructs incorporated into the UEMLBase.


    Project objectives:

The overall objective of this postdoctoral is to develop the underlying 
theory and an interface between */model editors/* and */UEMLbase tool 
/*for transforming models defined in an model editor to models defined 
within another editor, by using the degree of correspondence between 
constructs found within the UEMLBase. For that, the successful candidate 
has to choice or define a declarative language for model mapping. 
Additionally, he/she will be involved in the analysis concerning the 
various semantic measures to be used for discovering correspondences. 
Indeed, this analysis will be performed by taking into account an 
evaluation of generated model transformations. This will allow analysing 
and increasing the UEML practical interest.


    Requirements:

You must have an excellent PhD degree (or equivalent) in computer 
science or closely related field. You should demonstrate good knowledge 
in one or several of the above mentioned areas as well as good 
programming skills in Java and languages for ontology and model mapping 
and related theory.

Your salary will be approximately *2500 €/month*. You will work in a 
very social environment. Nantes is a beautiful city near the Atlantic 
Ocean.

Please send your application no later than   *7^th   January 2008*. We 
will expect within your application usual documents such as cv, copies 
of your degree certificates, list of publications (if any), transcripts 
of your university study results, PhD thesis extended abstract as well 
as motivation letter containing suggestions how to approach the above 
mentioned area in the project.

 

For informal inquires please contact Mounira Harzallah: 
mounira.harzallah@univ-nantes.fr 
<mailto:mounira.harzallah@univ-nantes.fr> or Giuseppe.berio@di.unito.it 
<mailto:Giuseppe.berio@di.unito.it>

 


